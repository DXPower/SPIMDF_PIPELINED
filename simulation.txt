--------------------
Cycle 1:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [ADDI R0, R0, #1]
	Entry 1: [ADDI R1, R1, #1]
	Entry 2:
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0:
	Entry 1:
Post-ALU2 Queue:

Registers
R00:	0	0	0	0	0	0	0	0
R08:	0	0	0	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
--------------------
Cycle 2:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [ADDI R1, R1, #1]
	Entry 1: [ADDI R2, R2, #400]
	Entry 2: [ADDI R3, R3, #10]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R0, R0, #1]
	Entry 1:
Post-ALU2 Queue:

Registers
R00:	0	0	0	0	0	0	0	0
R08:	0	0	0	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
--------------------
Cycle 3:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [ADDI R2, R2, #400]
	Entry 1: [ADDI R3, R3, #10]
	Entry 2: [SW R0, 0(R2)]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R1, R1, #1]
	Entry 1:
Post-ALU2 Queue: [ADDI R0, R0, #1]

Registers
R00:	0	0	0	0	0	0	0	0
R08:	0	0	0	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
--------------------
Cycle 4:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [ADDI R3, R3, #10]
	Entry 1: [SW R0, 0(R2)]
	Entry 2: [SW R1, 4(R2)]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R2, R2, #400]
	Entry 1:
Post-ALU2 Queue: [ADDI R1, R1, #1]

Registers
R00:	1	0	0	0	0	0	0	0
R08:	0	0	0	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
--------------------
Cycle 5:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [SW R0, 0(R2)]
	Entry 1: [SW R1, 4(R2)]
	Entry 2: [ADDI R2, R2, #8]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R3, R3, #10]
	Entry 1:
Post-ALU2 Queue: [ADDI R2, R2, #400]

Registers
R00:	1	1	0	0	0	0	0	0
R08:	0	0	0	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
--------------------
Cycle 6:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [SW R0, 0(R2)]
	Entry 1: [SW R1, 4(R2)]
	Entry 2: [ADDI R2, R2, #8]
	Entry 3: [ADDI R3, R3, #-1]
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0:
	Entry 1:
Post-ALU2 Queue: [ADDI R3, R3, #10]

Registers
R00:	1	1	400	0	0	0	0	0
R08:	0	0	0	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
--------------------
Cycle 7:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [SW R1, 4(R2)]
	Entry 1: [ADDI R2, R2, #8]
	Entry 2: [ADDI R3, R3, #-1]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0: [SW R0, 0(R2)]
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0:
	Entry 1:
Post-ALU2 Queue:

Registers
R00:	1	1	400	10	0	0	0	0
R08:	0	0	0	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
--------------------
Cycle 8:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [ADDI R2, R2, #8]
	Entry 1: [ADD R10, R0, R1]
	Entry 2:
	Entry 3:
Pre-ALU1 Queue:
	Entry 0: [SW R1, 4(R2)]
	Entry 1:
Pre-MEM Queue: [SW R0, 0(R2)]
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R3, R3, #-1]
	Entry 1:
Post-ALU2 Queue:

Registers
R00:	1	1	400	10	0	0	0	0
R08:	0	0	0	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
--------------------
Cycle 9:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [ADD R10, R0, R1]
	Entry 1: [SW R10, 0(R2)]
	Entry 2: [ADDI R0, R1, #0]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue: [SW R1, 4(R2)]
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R2, R2, #8]
	Entry 1:
Post-ALU2 Queue: [ADDI R3, R3, #-1]

Registers
R00:	1	1	400	10	0	0	0	0
R08:	0	0	0	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	--------------------
Cycle 10:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R0, R1, #0]
	Entry 2: [ADDI R1, R10, #0]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADD R10, R0, R1]
	Entry 1:
Post-ALU2 Queue: [ADDI R2, R2, #8]

Registers
R00:	1	1	400	9	0	0	0	0
R08:	0	0	0	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	--------------------
Cycle 11:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R1, R10, #0]
	Entry 2: [ADDI R2, R2, #4]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R0, R1, #0]
	Entry 1:
Post-ALU2 Queue: [ADD R10, R0, R1]

Registers
R00:	1	1	408	9	0	0	0	0
R08:	0	0	0	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	--------------------
Cycle 12:

IF Unit:
	Waiting Instruction:
	Executed Instruction: [BEQ R3, R20, #4]
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R1, R10, #0]
	Entry 2: [ADDI R2, R2, #4]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0:
	Entry 1:
Post-ALU2 Queue: [ADDI R0, R1, #0]

Registers
R00:	1	1	408	9	0	0	0	0
R08:	0	0	2	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	--------------------
Cycle 13:

IF Unit:
	Waiting Instruction:
	Executed Instruction: [J #284]
Pre-Issue Queue:
	Entry 0: [ADDI R2, R2, #4]
	Entry 1:
	Entry 2:
	Entry 3:
Pre-ALU1 Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R1, R10, #0]
	Entry 1:
Post-ALU2 Queue:

Registers
R00:	1	1	408	9	0	0	0	0
R08:	0	0	2	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	--------------------
Cycle 14:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [ADDI R3, R3, #-1]
	Entry 1: [ADD R10, R0, R1]
	Entry 2:
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue: [SW R10, 0(R2)]
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R2, R2, #4]
	Entry 1:
Post-ALU2 Queue: [ADDI R1, R10, #0]

Registers
R00:	1	1	408	9	0	0	0	0
R08:	0	0	2	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	--------------------
Cycle 15:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [ADD R10, R0, R1]
	Entry 1: [SW R10, 0(R2)]
	Entry 2: [ADDI R0, R1, #0]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R3, R3, #-1]
	Entry 1:
Post-ALU2 Queue: [ADDI R2, R2, #4]

Registers
R00:	1	2	408	9	0	0	0	0
R08:	0	0	2	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	--------------------
Cycle 16:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R0, R1, #0]
	Entry 2: [ADDI R1, R10, #0]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADD R10, R0, R1]
	Entry 1:
Post-ALU2 Queue: [ADDI R3, R3, #-1]

Registers
R00:	1	2	412	9	0	0	0	0
R08:	0	0	2	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	--------------------
Cycle 17:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R1, R10, #0]
	Entry 2: [ADDI R2, R2, #4]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R0, R1, #0]
	Entry 1:
Post-ALU2 Queue: [ADD R10, R0, R1]

Registers
R00:	1	2	412	8	0	0	0	0
R08:	0	0	2	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	--------------------
Cycle 18:

IF Unit:
	Waiting Instruction:
	Executed Instruction: [BEQ R3, R20, #4]
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R1, R10, #0]
	Entry 2: [ADDI R2, R2, #4]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0:
	Entry 1:
Post-ALU2 Queue: [ADDI R0, R1, #0]

Registers
R00:	1	2	412	8	0	0	0	0
R08:	0	0	3	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	--------------------
Cycle 19:

IF Unit:
	Waiting Instruction:
	Executed Instruction: [J #284]
Pre-Issue Queue:
	Entry 0: [ADDI R2, R2, #4]
	Entry 1:
	Entry 2:
	Entry 3:
Pre-ALU1 Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R1, R10, #0]
	Entry 1:
Post-ALU2 Queue:

Registers
R00:	2	2	412	8	0	0	0	0
R08:	0	0	3	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	--------------------
Cycle 20:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [ADDI R3, R3, #-1]
	Entry 1: [ADD R10, R0, R1]
	Entry 2:
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue: [SW R10, 0(R2)]
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R2, R2, #4]
	Entry 1:
Post-ALU2 Queue: [ADDI R1, R10, #0]

Registers
R00:	2	2	412	8	0	0	0	0
R08:	0	0	3	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	--------------------
Cycle 21:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [ADD R10, R0, R1]
	Entry 1: [SW R10, 0(R2)]
	Entry 2: [ADDI R0, R1, #0]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R3, R3, #-1]
	Entry 1:
Post-ALU2 Queue: [ADDI R2, R2, #4]

Registers
R00:	2	3	412	8	0	0	0	0
R08:	0	0	3	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	--------------------
Cycle 22:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R0, R1, #0]
	Entry 2: [ADDI R1, R10, #0]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADD R10, R0, R1]
	Entry 1:
Post-ALU2 Queue: [ADDI R3, R3, #-1]

Registers
R00:	2	3	416	8	0	0	0	0
R08:	0	0	3	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	--------------------
Cycle 23:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R1, R10, #0]
	Entry 2: [ADDI R2, R2, #4]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R0, R1, #0]
	Entry 1:
Post-ALU2 Queue: [ADD R10, R0, R1]

Registers
R00:	2	3	416	7	0	0	0	0
R08:	0	0	3	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	--------------------
Cycle 24:

IF Unit:
	Waiting Instruction:
	Executed Instruction: [BEQ R3, R20, #4]
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R1, R10, #0]
	Entry 2: [ADDI R2, R2, #4]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0:
	Entry 1:
Post-ALU2 Queue: [ADDI R0, R1, #0]

Registers
R00:	2	3	416	7	0	0	0	0
R08:	0	0	5	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	--------------------
Cycle 25:

IF Unit:
	Waiting Instruction:
	Executed Instruction: [J #284]
Pre-Issue Queue:
	Entry 0: [ADDI R2, R2, #4]
	Entry 1:
	Entry 2:
	Entry 3:
Pre-ALU1 Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R1, R10, #0]
	Entry 1:
Post-ALU2 Queue:

Registers
R00:	3	3	416	7	0	0	0	0
R08:	0	0	5	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	--------------------
Cycle 26:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [ADDI R3, R3, #-1]
	Entry 1: [ADD R10, R0, R1]
	Entry 2:
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue: [SW R10, 0(R2)]
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R2, R2, #4]
	Entry 1:
Post-ALU2 Queue: [ADDI R1, R10, #0]

Registers
R00:	3	3	416	7	0	0	0	0
R08:	0	0	5	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	--------------------
Cycle 27:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [ADD R10, R0, R1]
	Entry 1: [SW R10, 0(R2)]
	Entry 2: [ADDI R0, R1, #0]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R3, R3, #-1]
	Entry 1:
Post-ALU2 Queue: [ADDI R2, R2, #4]

Registers
R00:	3	5	416	7	0	0	0	0
R08:	0	0	5	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	--------------------
Cycle 28:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R0, R1, #0]
	Entry 2: [ADDI R1, R10, #0]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADD R10, R0, R1]
	Entry 1:
Post-ALU2 Queue: [ADDI R3, R3, #-1]

Registers
R00:	3	5	420	7	0	0	0	0
R08:	0	0	5	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	--------------------
Cycle 29:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R1, R10, #0]
	Entry 2: [ADDI R2, R2, #4]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R0, R1, #0]
	Entry 1:
Post-ALU2 Queue: [ADD R10, R0, R1]

Registers
R00:	3	5	420	6	0	0	0	0
R08:	0	0	5	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	--------------------
Cycle 30:

IF Unit:
	Waiting Instruction:
	Executed Instruction: [BEQ R3, R20, #4]
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R1, R10, #0]
	Entry 2: [ADDI R2, R2, #4]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0:
	Entry 1:
Post-ALU2 Queue: [ADDI R0, R1, #0]

Registers
R00:	3	5	420	6	0	0	0	0
R08:	0	0	8	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	--------------------
Cycle 31:

IF Unit:
	Waiting Instruction:
	Executed Instruction: [J #284]
Pre-Issue Queue:
	Entry 0: [ADDI R2, R2, #4]
	Entry 1:
	Entry 2:
	Entry 3:
Pre-ALU1 Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R1, R10, #0]
	Entry 1:
Post-ALU2 Queue:

Registers
R00:	5	5	420	6	0	0	0	0
R08:	0	0	8	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	--------------------
Cycle 32:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [ADDI R3, R3, #-1]
	Entry 1: [ADD R10, R0, R1]
	Entry 2:
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue: [SW R10, 0(R2)]
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R2, R2, #4]
	Entry 1:
Post-ALU2 Queue: [ADDI R1, R10, #0]

Registers
R00:	5	5	420	6	0	0	0	0
R08:	0	0	8	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	--------------------
Cycle 33:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [ADD R10, R0, R1]
	Entry 1: [SW R10, 0(R2)]
	Entry 2: [ADDI R0, R1, #0]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R3, R3, #-1]
	Entry 1:
Post-ALU2 Queue: [ADDI R2, R2, #4]

Registers
R00:	5	8	420	6	0	0	0	0
R08:	0	0	8	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	--------------------
Cycle 34:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R0, R1, #0]
	Entry 2: [ADDI R1, R10, #0]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADD R10, R0, R1]
	Entry 1:
Post-ALU2 Queue: [ADDI R3, R3, #-1]

Registers
R00:	5	8	424	6	0	0	0	0
R08:	0	0	8	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	--------------------
Cycle 35:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R1, R10, #0]
	Entry 2: [ADDI R2, R2, #4]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R0, R1, #0]
	Entry 1:
Post-ALU2 Queue: [ADD R10, R0, R1]

Registers
R00:	5	8	424	5	0	0	0	0
R08:	0	0	8	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	--------------------
Cycle 36:

IF Unit:
	Waiting Instruction:
	Executed Instruction: [BEQ R3, R20, #4]
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R1, R10, #0]
	Entry 2: [ADDI R2, R2, #4]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0:
	Entry 1:
Post-ALU2 Queue: [ADDI R0, R1, #0]

Registers
R00:	5	8	424	5	0	0	0	0
R08:	0	0	13	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	--------------------
Cycle 37:

IF Unit:
	Waiting Instruction:
	Executed Instruction: [J #284]
Pre-Issue Queue:
	Entry 0: [ADDI R2, R2, #4]
	Entry 1:
	Entry 2:
	Entry 3:
Pre-ALU1 Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R1, R10, #0]
	Entry 1:
Post-ALU2 Queue:

Registers
R00:	8	8	424	5	0	0	0	0
R08:	0	0	13	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	--------------------
Cycle 38:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [ADDI R3, R3, #-1]
	Entry 1: [ADD R10, R0, R1]
	Entry 2:
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue: [SW R10, 0(R2)]
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R2, R2, #4]
	Entry 1:
Post-ALU2 Queue: [ADDI R1, R10, #0]

Registers
R00:	8	8	424	5	0	0	0	0
R08:	0	0	13	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	--------------------
Cycle 39:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [ADD R10, R0, R1]
	Entry 1: [SW R10, 0(R2)]
	Entry 2: [ADDI R0, R1, #0]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R3, R3, #-1]
	Entry 1:
Post-ALU2 Queue: [ADDI R2, R2, #4]

Registers
R00:	8	13	424	5	0	0	0	0
R08:	0	0	13	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	--------------------
Cycle 40:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R0, R1, #0]
	Entry 2: [ADDI R1, R10, #0]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADD R10, R0, R1]
	Entry 1:
Post-ALU2 Queue: [ADDI R3, R3, #-1]

Registers
R00:	8	13	428	5	0	0	0	0
R08:	0	0	13	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	--------------------
Cycle 41:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R1, R10, #0]
	Entry 2: [ADDI R2, R2, #4]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R0, R1, #0]
	Entry 1:
Post-ALU2 Queue: [ADD R10, R0, R1]

Registers
R00:	8	13	428	4	0	0	0	0
R08:	0	0	13	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	--------------------
Cycle 42:

IF Unit:
	Waiting Instruction:
	Executed Instruction: [BEQ R3, R20, #4]
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R1, R10, #0]
	Entry 2: [ADDI R2, R2, #4]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0:
	Entry 1:
Post-ALU2 Queue: [ADDI R0, R1, #0]

Registers
R00:	8	13	428	4	0	0	0	0
R08:	0	0	21	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	--------------------
Cycle 43:

IF Unit:
	Waiting Instruction:
	Executed Instruction: [J #284]
Pre-Issue Queue:
	Entry 0: [ADDI R2, R2, #4]
	Entry 1:
	Entry 2:
	Entry 3:
Pre-ALU1 Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R1, R10, #0]
	Entry 1:
Post-ALU2 Queue:

Registers
R00:	13	13	428	4	0	0	0	0
R08:	0	0	21	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	--------------------
Cycle 44:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [ADDI R3, R3, #-1]
	Entry 1: [ADD R10, R0, R1]
	Entry 2:
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue: [SW R10, 0(R2)]
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R2, R2, #4]
	Entry 1:
Post-ALU2 Queue: [ADDI R1, R10, #0]

Registers
R00:	13	13	428	4	0	0	0	0
R08:	0	0	21	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	--------------------
Cycle 45:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [ADD R10, R0, R1]
	Entry 1: [SW R10, 0(R2)]
	Entry 2: [ADDI R0, R1, #0]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R3, R3, #-1]
	Entry 1:
Post-ALU2 Queue: [ADDI R2, R2, #4]

Registers
R00:	13	21	428	4	0	0	0	0
R08:	0	0	21	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	21
--------------------
Cycle 46:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R0, R1, #0]
	Entry 2: [ADDI R1, R10, #0]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADD R10, R0, R1]
	Entry 1:
Post-ALU2 Queue: [ADDI R3, R3, #-1]

Registers
R00:	13	21	432	4	0	0	0	0
R08:	0	0	21	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	21
--------------------
Cycle 47:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R1, R10, #0]
	Entry 2: [ADDI R2, R2, #4]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R0, R1, #0]
	Entry 1:
Post-ALU2 Queue: [ADD R10, R0, R1]

Registers
R00:	13	21	432	3	0	0	0	0
R08:	0	0	21	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	21
--------------------
Cycle 48:

IF Unit:
	Waiting Instruction:
	Executed Instruction: [BEQ R3, R20, #4]
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R1, R10, #0]
	Entry 2: [ADDI R2, R2, #4]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0:
	Entry 1:
Post-ALU2 Queue: [ADDI R0, R1, #0]

Registers
R00:	13	21	432	3	0	0	0	0
R08:	0	0	34	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	21
--------------------
Cycle 49:

IF Unit:
	Waiting Instruction:
	Executed Instruction: [J #284]
Pre-Issue Queue:
	Entry 0: [ADDI R2, R2, #4]
	Entry 1:
	Entry 2:
	Entry 3:
Pre-ALU1 Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R1, R10, #0]
	Entry 1:
Post-ALU2 Queue:

Registers
R00:	21	21	432	3	0	0	0	0
R08:	0	0	34	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	21
--------------------
Cycle 50:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [ADDI R3, R3, #-1]
	Entry 1: [ADD R10, R0, R1]
	Entry 2:
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue: [SW R10, 0(R2)]
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R2, R2, #4]
	Entry 1:
Post-ALU2 Queue: [ADDI R1, R10, #0]

Registers
R00:	21	21	432	3	0	0	0	0
R08:	0	0	34	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	21
--------------------
Cycle 51:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [ADD R10, R0, R1]
	Entry 1: [SW R10, 0(R2)]
	Entry 2: [ADDI R0, R1, #0]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R3, R3, #-1]
	Entry 1:
Post-ALU2 Queue: [ADDI R2, R2, #4]

Registers
R00:	21	34	432	3	0	0	0	0
R08:	0	0	34	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	21
432:	34	--------------------
Cycle 52:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R0, R1, #0]
	Entry 2: [ADDI R1, R10, #0]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADD R10, R0, R1]
	Entry 1:
Post-ALU2 Queue: [ADDI R3, R3, #-1]

Registers
R00:	21	34	436	3	0	0	0	0
R08:	0	0	34	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	21
432:	34	--------------------
Cycle 53:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R1, R10, #0]
	Entry 2: [ADDI R2, R2, #4]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R0, R1, #0]
	Entry 1:
Post-ALU2 Queue: [ADD R10, R0, R1]

Registers
R00:	21	34	436	2	0	0	0	0
R08:	0	0	34	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	21
432:	34	--------------------
Cycle 54:

IF Unit:
	Waiting Instruction:
	Executed Instruction: [BEQ R3, R20, #4]
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R1, R10, #0]
	Entry 2: [ADDI R2, R2, #4]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0:
	Entry 1:
Post-ALU2 Queue: [ADDI R0, R1, #0]

Registers
R00:	21	34	436	2	0	0	0	0
R08:	0	0	55	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	21
432:	34	--------------------
Cycle 55:

IF Unit:
	Waiting Instruction:
	Executed Instruction: [J #284]
Pre-Issue Queue:
	Entry 0: [ADDI R2, R2, #4]
	Entry 1:
	Entry 2:
	Entry 3:
Pre-ALU1 Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R1, R10, #0]
	Entry 1:
Post-ALU2 Queue:

Registers
R00:	34	34	436	2	0	0	0	0
R08:	0	0	55	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	21
432:	34	--------------------
Cycle 56:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [ADDI R3, R3, #-1]
	Entry 1: [ADD R10, R0, R1]
	Entry 2:
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue: [SW R10, 0(R2)]
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R2, R2, #4]
	Entry 1:
Post-ALU2 Queue: [ADDI R1, R10, #0]

Registers
R00:	34	34	436	2	0	0	0	0
R08:	0	0	55	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	21
432:	34	--------------------
Cycle 57:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [ADD R10, R0, R1]
	Entry 1: [SW R10, 0(R2)]
	Entry 2: [ADDI R0, R1, #0]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R3, R3, #-1]
	Entry 1:
Post-ALU2 Queue: [ADDI R2, R2, #4]

Registers
R00:	34	55	436	2	0	0	0	0
R08:	0	0	55	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	21
432:	34	55	--------------------
Cycle 58:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R0, R1, #0]
	Entry 2: [ADDI R1, R10, #0]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADD R10, R0, R1]
	Entry 1:
Post-ALU2 Queue: [ADDI R3, R3, #-1]

Registers
R00:	34	55	440	2	0	0	0	0
R08:	0	0	55	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	21
432:	34	55	--------------------
Cycle 59:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R1, R10, #0]
	Entry 2: [ADDI R2, R2, #4]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R0, R1, #0]
	Entry 1:
Post-ALU2 Queue: [ADD R10, R0, R1]

Registers
R00:	34	55	440	1	0	0	0	0
R08:	0	0	55	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	21
432:	34	55	--------------------
Cycle 60:

IF Unit:
	Waiting Instruction:
	Executed Instruction: [BEQ R3, R20, #4]
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R1, R10, #0]
	Entry 2: [ADDI R2, R2, #4]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0:
	Entry 1:
Post-ALU2 Queue: [ADDI R0, R1, #0]

Registers
R00:	34	55	440	1	0	0	0	0
R08:	0	0	89	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	21
432:	34	55	--------------------
Cycle 61:

IF Unit:
	Waiting Instruction:
	Executed Instruction: [J #284]
Pre-Issue Queue:
	Entry 0: [ADDI R2, R2, #4]
	Entry 1:
	Entry 2:
	Entry 3:
Pre-ALU1 Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R1, R10, #0]
	Entry 1:
Post-ALU2 Queue:

Registers
R00:	55	55	440	1	0	0	0	0
R08:	0	0	89	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	21
432:	34	55	--------------------
Cycle 62:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [ADDI R3, R3, #-1]
	Entry 1: [ADD R10, R0, R1]
	Entry 2:
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue: [SW R10, 0(R2)]
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R2, R2, #4]
	Entry 1:
Post-ALU2 Queue: [ADDI R1, R10, #0]

Registers
R00:	55	55	440	1	0	0	0	0
R08:	0	0	89	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	21
432:	34	55	--------------------
Cycle 63:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [ADD R10, R0, R1]
	Entry 1: [SW R10, 0(R2)]
	Entry 2: [ADDI R0, R1, #0]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R3, R3, #-1]
	Entry 1:
Post-ALU2 Queue: [ADDI R2, R2, #4]

Registers
R00:	55	89	440	1	0	0	0	0
R08:	0	0	89	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	21
432:	34	55	89	--------------------
Cycle 64:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R0, R1, #0]
	Entry 2: [ADDI R1, R10, #0]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADD R10, R0, R1]
	Entry 1:
Post-ALU2 Queue: [ADDI R3, R3, #-1]

Registers
R00:	55	89	444	1	0	0	0	0
R08:	0	0	89	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	21
432:	34	55	89	--------------------
Cycle 65:

IF Unit:
	Waiting Instruction:
	Executed Instruction:
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R1, R10, #0]
	Entry 2: [ADDI R2, R2, #4]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R0, R1, #0]
	Entry 1:
Post-ALU2 Queue: [ADD R10, R0, R1]

Registers
R00:	55	89	444	0	0	0	0	0
R08:	0	0	89	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	21
432:	34	55	89	--------------------
Cycle 66:

IF Unit:
	Waiting Instruction:
	Executed Instruction: [BEQ R3, R20, #4]
Pre-Issue Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1: [ADDI R1, R10, #0]
	Entry 2: [ADDI R2, R2, #4]
	Entry 3:
Pre-ALU1 Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0:
	Entry 1:
Post-ALU2 Queue: [ADDI R0, R1, #0]

Registers
R00:	55	89	444	0	0	0	0	0
R08:	0	0	144	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	21
432:	34	55	89	--------------------
Cycle 67:

IF Unit:
	Waiting Instruction:
	Executed Instruction: [BREAK]
Pre-Issue Queue:
	Entry 0: [ADDI R2, R2, #4]
	Entry 1:
	Entry 2:
	Entry 3:
Pre-ALU1 Queue:
	Entry 0: [SW R10, 0(R2)]
	Entry 1:
Pre-MEM Queue:
Post-MEM Queue:
Pre-ALU2 Queue:
	Entry 0: [ADDI R1, R10, #0]
	Entry 1:
Post-ALU2 Queue:

Registers
R00:	89	89	444	0	0	0	0	0
R08:	0	0	144	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0

Data
400:	1	1	2	3	5	8	13	21
432:	34	55	89	